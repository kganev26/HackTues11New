{"ast":null,"code":"var _jsxFileName = \"C:\\\\Programs_PK\\\\HTML\\\\test_1\\\\my-app\\\\src\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [messages, setMessages] = useState([]); // List of messages\n  const [messageInput, setMessageInput] = useState(''); // Input field value\n\n  // Function to handle sending the message\n  const handleSendMessage = async () => {\n    if (!messageInput) return; // Don't send empty messages\n\n    // Add the sent message to the messages list\n    const newMessages = [...messages, {\n      text: messageInput,\n      type: 'sent'\n    }];\n    setMessages(newMessages);\n    setMessageInput(''); // Clear the input field\n\n    try {\n      // Simulate an API request\n      const response = await fetch('https://your-api-endpoint.com/send', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: messageInput\n        })\n      });\n      const data = await response.json();\n\n      // Add the reply message from the server\n      setMessages([...newMessages, {\n        text: data.reply,\n        type: 'received'\n      }]);\n    } catch (error) {\n      console.error('Error sending message:', error);\n      // Handle error, e.g., by showing an error message\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: '600px',\n      margin: '0 auto',\n      padding: '20px',\n      border: '1px solid #ccc'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '10px',\n        height: '300px',\n        overflowY: 'scroll',\n        border: '1px solid #ddd',\n        marginBottom: '20px',\n        borderRadius: '8px'\n      },\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: message.type === 'sent' ? 'right' : 'left',\n          backgroundColor: message.type === 'sent' ? '#e1f5fe' : '#f1f1f1',\n          padding: '10px',\n          borderRadius: '8px',\n          marginBottom: '10px'\n        },\n        children: message.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: messageInput,\n        onChange: e => setMessageInput(e.target.value),\n        placeholder: \"Type a message...\",\n        style: {\n          flex: 1,\n          padding: '10px',\n          borderRadius: '5px',\n          border: '1px solid #ddd',\n          marginRight: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        style: {\n          padding: '10px 15px',\n          backgroundColor: '#007bff',\n          color: '#fff',\n          border: 'none',\n          borderRadius: '5px'\n        },\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"A5KNm8mjPtO2RpTUWEDKGiRA72I=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Chat","_s","messages","setMessages","messageInput","setMessageInput","handleSendMessage","newMessages","text","type","response","fetch","method","headers","body","JSON","stringify","message","data","json","reply","error","console","style","maxWidth","margin","padding","border","children","height","overflowY","marginBottom","borderRadius","map","index","textAlign","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","display","value","onChange","e","target","placeholder","flex","marginRight","onClick","color","_c","$RefreshReg$"],"sources":["C:/Programs_PK/HTML/test_1/my-app/src/Chat.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst Chat = () => {\n  const [messages, setMessages] = useState([]); // List of messages\n  const [messageInput, setMessageInput] = useState(''); // Input field value\n\n  // Function to handle sending the message\n  const handleSendMessage = async () => {\n    if (!messageInput) return; // Don't send empty messages\n\n    // Add the sent message to the messages list\n    const newMessages = [...messages, { text: messageInput, type: 'sent' }];\n    setMessages(newMessages);\n    setMessageInput(''); // Clear the input field\n\n    try {\n      // Simulate an API request\n      const response = await fetch('https://your-api-endpoint.com/send', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ message: messageInput }),\n      });\n\n      const data = await response.json();\n\n      // Add the reply message from the server\n      setMessages([...newMessages, { text: data.reply, type: 'received' }]);\n    } catch (error) {\n      console.error('Error sending message:', error);\n      // Handle error, e.g., by showing an error message\n    }\n  };\n\n  return (\n    <div style={{ maxWidth: '600px', margin: '0 auto', padding: '20px', border: '1px solid #ccc' }}>\n      <div\n        style={{\n          padding: '10px',\n          height: '300px',\n          overflowY: 'scroll',\n          border: '1px solid #ddd',\n          marginBottom: '20px',\n          borderRadius: '8px',\n        }}\n      >\n        {messages.map((message, index) => (\n          <div\n            key={index}\n            style={{\n              textAlign: message.type === 'sent' ? 'right' : 'left',\n              backgroundColor: message.type === 'sent' ? '#e1f5fe' : '#f1f1f1',\n              padding: '10px',\n              borderRadius: '8px',\n              marginBottom: '10px',\n            }}\n          >\n            {message.text}\n          </div>\n        ))}\n      </div>\n\n      <div style={{ display: 'flex' }}>\n        <input\n          type=\"text\"\n          value={messageInput}\n          onChange={(e) => setMessageInput(e.target.value)}\n          placeholder=\"Type a message...\"\n          style={{\n            flex: 1,\n            padding: '10px',\n            borderRadius: '5px',\n            border: '1px solid #ddd',\n            marginRight: '10px',\n          }}\n        />\n        <button\n          onClick={handleSendMessage}\n          style={{\n            padding: '10px 15px',\n            backgroundColor: '#007bff',\n            color: '#fff',\n            border: 'none',\n            borderRadius: '5px',\n          }}\n        >\n          Send\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}