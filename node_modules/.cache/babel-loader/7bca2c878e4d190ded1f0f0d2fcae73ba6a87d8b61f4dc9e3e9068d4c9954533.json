{"ast":null,"code":"var _jsxFileName = \"C:\\\\Programs_PK\\\\HTML\\\\test_1\\\\my-app\\\\src\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css'; // Import the CSS file for styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [messages, setMessages] = useState([]); // List of messages\n  const [messageInput, setMessageInput] = useState(''); // Input field value\n\n  // Function to handle sending the message\n  const handleSendMessage = async () => {\n    if (!messageInput) return; // Don't send empty messages\n\n    // Add the sent message to the messages list\n    const newMessages = [...messages, {\n      text: messageInput,\n      type: 'sent'\n    }];\n    setMessages(newMessages);\n    setMessageInput(''); // Clear the input field\n\n    try {\n      // Simulate an API request\n      const response = await fetch('https//192.168.34.104', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: messageInput\n        })\n      });\n      const data = await response.json();\n\n      // Add the reply message from the server\n      setMessages([...newMessages, {\n        text: data.reply,\n        type: 'received'\n      }]);\n    } catch (error) {\n      console.error('Error sending message:', error);\n      // Handle error, e.g., by showing an error message\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.type}`,\n        children: message.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: messageInput,\n        onChange: e => setMessageInput(e.target.value),\n        placeholder: \"Type a message...\",\n        className: \"input-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        className: \"send-button\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"A5KNm8mjPtO2RpTUWEDKGiRA72I=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Chat","_s","messages","setMessages","messageInput","setMessageInput","handleSendMessage","newMessages","text","type","response","fetch","method","headers","body","JSON","stringify","message","data","json","reply","error","console","className","children","map","index","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Programs_PK/HTML/test_1/my-app/src/Chat.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css'; // Import the CSS file for styles\n\nconst Chat = () => {\n  const [messages, setMessages] = useState([]); // List of messages\n  const [messageInput, setMessageInput] = useState(''); // Input field value\n\n  // Function to handle sending the message\n  const handleSendMessage = async () => {\n    if (!messageInput) return; // Don't send empty messages\n\n    // Add the sent message to the messages list\n    const newMessages = [...messages, { text: messageInput, type: 'sent' }];\n    setMessages(newMessages);\n    setMessageInput(''); // Clear the input field\n\n    try {\n      // Simulate an API request\n      const response = await fetch('https//192.168.34.104', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ message: messageInput }),\n      });\n\n      const data = await response.json();\n\n      // Add the reply message from the server\n      setMessages([...newMessages, { text: data.reply, type: 'received' }]);\n    } catch (error) {\n      console.error('Error sending message:', error);\n      // Handle error, e.g., by showing an error message\n    }\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"messages\">\n        {messages.map((message, index) => (\n          <div key={index} className={`message ${message.type}`}>\n            {message.text}\n          </div>\n        ))}\n      </div>\n\n      <div className=\"input-container\">\n        <input\n          type=\"text\"\n          value={messageInput}\n          onChange={(e) => setMessageInput(e.target.value)}\n          placeholder=\"Type a message...\"\n          className=\"input-field\"\n        />\n        <button onClick={handleSendMessage} className=\"send-button\">\n          Send\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}